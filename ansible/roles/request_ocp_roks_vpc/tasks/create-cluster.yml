---
- name: get-resource-group
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ resourceGroup }}"
    ibmcloud_api_key: "{{ apikey }}"
  register: output_resource_group

- name: set-fact-resource-group-id
  set_fact: rg="{{ output_resource_group.resource }}"
    
- name: create-cluster async with 3 subnets
  ibm.cloudcollection.ibm_container_vpc_cluster:
    flavor: "{{ machineType }}"
    name: "{{ clusterName }}"
    vpc_id: "{{ vpc_id | default('r006-f040b2f0-4c45-4e8a-aa50-0c12cf0ce942') }}"
    zones:
      - name: "{{ cloudregion | default('us-south') }}-1"
        subnet_id: "{{ subnet_id_1 }}"
      - name: "{{ cloudregion | default('us-south') }}-2"
        subnet_id: "{{ subnet_id_2 }}"
      - name: "{{ cloudregion | default('us-south') }}-3"
        subnet_id: "{{ subnet_id_3 }}"
    force_delete_storage: "{{ force_deletet_storage }}"
    kube_version: "{{ kubeVersion }}"
    resource_group_id: "{{ rg.id }}"
    ibmcloud_api_key: "{{ apikey }}"
    entitlement: "{{ entitlement }}"
    cos_instance_crn: "{{ cos_instance_crn | default('crn:v1:bluemix:public:cloud-object-storage:global:a/cd3d726526ba4a2b84ee6d6cc7072d87:e278f8f5-9079-4955-80dd-559c3c990e5c::') }}"
    worker_count: "{{ defaultPoolSize }}"

  async: 86400 #timeout after 1 day
  poll: 0
  register: long_task
  when: (subnet_id_1 is defined) and (subnet_id_2 is defined) and (subnet_id_3 is defined)

- name: Check on an async task
  async_status:
    jid: "{{ long_task.ansible_job_id }}"
  register: long_task_result
  until: long_task_result.finished
  retries: 120 # Retries for 2 hours
  delay: 60
  when: (subnet_id_1 is defined) and (subnet_id_2 is defined) and (subnet_id_3 is defined) 

- name: create-cluster async with 2 subnets
  ibm.cloudcollection.ibm_container_vpc_cluster:
    flavor: "{{ machineType }}"
    name: "{{ clusterName }}"
    vpc_id: "{{ vpc_id | default('r006-f040b2f0-4c45-4e8a-aa50-0c12cf0ce942') }}"
    zones:
      - name: "{{ cloudregion | default('us-south') }}-1"
        subnet_id: "{{ subnet_id_1 }}"
      - name: "{{ cloudregion | default('us-south') }}-2"
        subnet_id: "{{ subnet_id_2 }}"
    force_delete_storage: "{{ force_deletet_storage }}"
    kube_version: "{{ kubeVersion }}"
    resource_group_id: "{{ rg.id }}"
    ibmcloud_api_key: "{{ apikey }}"
    entitlement: "{{ entitlement }}"
    cos_instance_crn: "{{ cos_instance_crn | default('crn:v1:bluemix:public:cloud-object-storage:global:a/cd3d726526ba4a2b84ee6d6cc7072d87:e278f8f5-9079-4955-80dd-559c3c990e5c::') }}"
    worker_count: "{{ defaultPoolSize }}"

  async: 86400 #timeout after 1 day
  poll: 0
  register: long_task
  when: (subnet_id_1 is defined) and (subnet_id_2 is defined) and (subnet_id_3 is not defined)

- name: Check on an async task
  async_status:
    jid: "{{ long_task.ansible_job_id }}"
  register: long_task_result
  until: long_task_result.finished
  retries: 120 # Retries for 2 hours
  delay: 60
  when: (subnet_id_1 is defined) and (subnet_id_2 is defined) and (subnet_id_3 is not defined)

- name: create-cluster async with 1 subnet
  ibm.cloudcollection.ibm_container_vpc_cluster:
    flavor: "{{ machineType }}"
    name: "{{ clusterName }}"
    vpc_id: "{{ vpc_id | default('r006-f040b2f0-4c45-4e8a-aa50-0c12cf0ce942') }}"
    zones:
      - name: "{{ cloudregion | default('us-south') }}-1"
        subnet_id: "{{ subnet_id_1 }}"
    force_delete_storage: "{{ force_deletet_storage }}"
    kube_version: "{{ kubeVersion }}"
    resource_group_id: "{{ rg.id }}"
    ibmcloud_api_key: "{{ apikey }}"
    entitlement: "{{ entitlement }}"
    cos_instance_crn: "{{ cos_instance_crn | default('crn:v1:bluemix:public:cloud-object-storage:global:a/cd3d726526ba4a2b84ee6d6cc7072d87:e278f8f5-9079-4955-80dd-559c3c990e5c::') }}"
    worker_count: "{{ defaultPoolSize }}"

  async: 86400 #timeout after 1 day
  poll: 0
  register: long_task
  when: (subnet_id_1 is defined) and (subnet_id_2 is not defined) and (subnet_id_3 is not defined)
  
- name: Check on an async task
  async_status:
    jid: "{{ long_task.ansible_job_id }}"
  register: long_task_result
  until: long_task_result.finished
  retries: 120 # Retries for 2 hours
  delay: 60
  when: (subnet_id_1 is defined) and (subnet_id_2 is not defined) and (subnet_id_3 is not defined) 
